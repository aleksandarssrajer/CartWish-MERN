name: Deploy to GCP Cloud Run

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  REGION: europe-west1
  REPO_NAME: cartwish-repo
  BACKEND_NAME: cartwish-backend
  FRONTEND_NAME: cartwish-frontend
  IMAGE_TAG: ${{ github.sha }}


jobs:
  deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    outputs:
      backend_changed: ${{ steps.check_backend.outputs.changed }}
      frontend_changed: ${{ steps.check_frontend.outputs.changed }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if backend changed
        id: check_backend
        run: |
          git fetch origin main --depth=2
          git diff --quiet origin/main -- backend || echo "changed=true" >> $GITHUB_OUTPUT
          echo "changed=false" >> $GITHUB_OUTPUT
      
      - name: Set backend_changed output
        id: set_backend
        run: echo "::set-output name=changed::$(if git diff --quiet origin/main -- backend; then echo false; else echo true; fi)"

      - name: Check if frontend changed
        id: check_frontend
        run: |
          git fetch origin main --depth=2
          git diff --quiet origin/main -- frontendJS || echo "changed=true" >> $GITHUB_OUTPUT
          echo "changed=false" >> $GITHUB_OUTPUT

      - name: Set frontend_changed output
        id: set_frontend
        run: echo "::set-output name=changed::$(if git diff --quiet origin/main -- frontendJS; then echo false; else echo true; fi)"
        

      - name: Authenicate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{secrets.WORKLOAD_IDENTITY_PROVIDER}}
          service_account: ${{secrets.SERVICE_ACCOUNT_EMAIL}}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Setup Docker
        uses: docker/setup-buildx-action@v3

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker europe-west1-docker.pkg.dev

      - name: Build & Push backend image
        if: steps.set_backend.outputs.changed == 'true'
        run: |
          docker build -t europe-west1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/cartwish-repo/backend:${{ env.IMAGE_TAG }} ./backend
          docker push europe-west1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/cartwish-repo/backend:${{ env.IMAGE_TAG }}

      - name: Terraform Init
        working-directory: ./infra
        run: terraform init

      - name: Deploy backend to Cloud Run 
        working-directory: ./infra
        run: |
          terraform apply \
            -target=google_cloud_run_service.backend \
            -var="backend_image_tag=${{ env.IMAGE_TAG }}" \
            -auto-approve
###
      # - name: Debug terraform backend_url output
      #   working-directory: ./infra
      #   run: terraform output backend_url || echo "Output backend_url does not exist" 

      # - name: Get backend URL
      #   id: backend_url
      #   working-directory: ./infra
      #   run: |
      #     BACKEND_URL=$(terraform output -raw backend_url | grep -o 'https://[^: ]*')
      #     url=$(echo "$BACKEND_URL" | head -n 1 | tr -d '\n\r')
      #     echo "BACKEND_URL=$url" >> $GITHUB_OUTPUT

      - name: Get current backend URL from Cloud Run
        id: backend_url
        run: |
          url=$(gcloud run services describe ${{ env.BACKEND_NAME }} \
            --region ${{ env.REGION }} \
            --format='value(status.url)')
          echo "BACKEND_URL=$url" >> $GITHUB_OUTPUT

      
      - name: Build & Push frontend image with backend URL
        if: steps.set_frontend.outputs.changed == 'true'
        run: |
          docker build --build-arg VITE_API_URL=${{ steps.backend_url.outputs.BACKEND_URL }}/api -t europe-west1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/cartwish-repo/frontend:${{ github.sha }} ./frontendJS
          docker push europe-west1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/cartwish-repo/frontend:${{ github.sha }}

      - name: Deploy frontend to Cloud Run 
        working-directory: ./infra
        run: |
          terraform apply \
            -target=google_cloud_run_service.frontend \
            -var="frontend_image_tag=${{ env.IMAGE_TAG }}" \
            -auto-approve

      - name: Output Cloud Run URLs
        working-directory: ./infra
        run: terraform output

