# Ime workflow-a
name: Deploy to GCP

# Trigger: Pokreće se na push na granu 'Front-CloudStorage'
on:
  push:
    branches:
      - Front-CloudStorage

# Dozvole potrebne za autentifikaciju na GCP
permissions:
  id-token: write
  contents: read

# Globalne environment varijable
env:
  REGION: europe-west1
  REPO_NAME: cartwish-repo
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    name: Build & Deploy to GCP
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Preuzimamo celu istoriju da bi git diff radio pouzdano
          fetch-depth: 0 

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      # 1. POUZDANA PROVERA PROMENA KORISTEĆI TVOJ PRISTUP
      - name: Check for file changes
        id: changes
        run: |
          echo "Checking for changes between ${{ github.event.before }} and ${{ github.event.after }}"
          # Proveravamo backend
          if git diff --quiet ${{ github.event.before }} ${{ github.event.after }} -- ./backend; then
            echo "backend_changed=false" >> $GITHUB_OUTPUT
          else
            echo "backend_changed=true" >> $GITHUB_OUTPUT
          fi
          # Proveravamo frontend
          if git diff --quiet ${{ github.event.before }} ${{ github.event.after }} -- ./frontendJS; then
            echo "frontend_changed=false" >> $GITHUB_OUTPUT
          else
            echo "frontend_changed=true" >> $GITHUB_OUTPUT
          fi
          # Proveravamo infra
          if git diff --quiet ${{ github.event.before }} ${{ github.event.after }} -- ./infra; then
            echo "infra_changed=false" >> $GITHUB_OUTPUT
          else
            echo "infra_changed=true" >> $GITHUB_OUTPUT
          fi

      # --- Backend Build (ako treba) ---
      - name: Setup Docker & Buildx
        if: steps.changes.outputs.backend_changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Configure Docker for Artifact Registry
        if: steps.changes.outputs.backend_changed == 'true'
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push backend image
        if: steps.changes.outputs.backend_changed == 'true'
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/backend:${{ env.IMAGE_TAG }} ./backend
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/backend:${{ env.IMAGE_TAG }}
        
      # --- Terraform (ako treba) ---
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: ./infra

      - name: Terraform Apply
        if: steps.changes.outputs.backend_changed == 'true' || steps.changes.outputs.infra_changed == 'true'
        run: |
          TF_APPLY_COMMAND="terraform apply -auto-approve"
          if [ "${{ steps.changes.outputs.backend_changed }}" == "true" ]; then
            echo "Applying with new backend image tag: ${{ env.IMAGE_TAG }}"
            TF_APPLY_COMMAND="$TF_APPLY_COMMAND -var='backend_image_tag=${{ env.IMAGE_TAG }}'"
          fi
          $TF_APPLY_COMMAND
        working-directory: ./infra

      # --- Frontend Build & Upload (ako treba) ---
      - name: Get GCS Bucket Name
        if: steps.changes.outputs.frontend_changed == 'true'
        id: get_bucket_name
        run: |
          cd ./infra
          terraform init
          echo "bucket_name=$(terraform output -raw frontend_bucket_name)" >> $GITHUB_OUTPUT
          cd ..

      - name: Setup Node.js
        if: steps.changes.outputs.frontend_changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build frontend
        if: steps.changes.outputs.frontend_changed == 'true'
        run: |
          npm ci
          npm run build
        working-directory: ./frontendJS

      - name: Upload frontend to GCS
        if: steps.changes.outputs.frontend_changed == 'true'
        run: |
          gcloud storage cp -r ./dist/* gs://${{ steps.get_bucket_name.outputs.bucket_name }}/
        working-directory: ./frontendJS