name: Deploy to GCP

on:
  push:
    branches:
      - Front-CloudStorage

permissions:
  id-token: write
  contents: read

env:
  REGION: europe-west1
  REPO_NAME: cartwish-repo
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    name: Build & Deploy to GCP
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      # 1. AŽURIRANA PROVERA: Sada pratimo i 'infra' folder
      - name: Check for file changes
        id: changes
        uses: tj-actions/changed-files@v44
        with:
          backend_changed: |
            backend/**
          frontend_changed: |
            frontendJS/**
          infra_changed: |
            infra/**

      # --- Backend Build (ako treba) ---
      - name: Setup Docker & Buildx
        if: steps.changes.outputs.backend_changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Configure Docker for Artifact Registry
        if: steps.changes.outputs.backend_changed == 'true'
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and Push backend image
        if: steps.changes.outputs.backend_changed == 'true'
        run: |
          echo "Backend files changed. Building and pushing new image..."
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/backend:${{ env.IMAGE_TAG }} ./backend
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/backend:${{ env.IMAGE_TAG }}
        
      # --- Terraform (ako treba) ---
      - name: Setup Terraform
        if: steps.changes.outputs.backend_changed == 'true' || steps.changes.outputs.infra_changed == 'true'
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        if: steps.changes.outputs.backend_changed == 'true' || steps.changes.outputs.infra_changed == 'true'
        run: terraform init
        working-directory: ./infra

      - name: Terraform Apply
        # 2. AŽURIRAN USLOV: Pokreni apply samo ako se menjao backend ILI infra
        if: steps.changes.outputs.backend_changed == 'true' || steps.changes.outputs.infra_changed == 'true'
        run: |
          TF_APPLY_COMMAND="terraform apply -auto-approve"
          if [ "${{ steps.changes.outputs.backend_changed }}" == "true" ]; then
            TF_APPLY_COMMAND="$TF_APPLY_COMMAND -var=\"backend_image_tag=${{ env.IMAGE_TAG }}\""
          fi
          echo "Running command: $TF_APPLY_COMMAND"
          $TF_APPLY_COMMAND
        working-directory: ./infra

      # --- Frontend Build & Upload (ako treba) ---
      - name: Get GCS Bucket Name
        # Ovaj korak mora uvek da se pokrene ako se frontend menjao, da bismo znali gde da upload-ujemo
        if: steps.changes.outputs.frontend_changed == 'true'
        id: get_bucket_name
        run: |
          # Inicijalizujemo Terraform samo da bismo mogli da pročitamo output
          cd ./infra
          terraform init -backend=false # Brza inicijalizacija bez provere bekenda
          echo "bucket_name=$(terraform output -raw frontend_bucket_name)" >> $GITHUB_OUTPUT
          cd ..

      - name: Setup Node.js
        if: steps.changes.outputs.frontend_changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build frontend
        if: steps.changes.outputs.frontend_changed == 'true'
        run: |
          npm ci
          npm run build
        working-directory: ./frontendJS

      - name: Upload frontend to GCS
        if: steps.changes.outputs.frontend_changed == 'true'
        run: |
          gcloud storage cp -r ./dist/* gs://${{ steps.get_bucket_name.outputs.bucket_name }}/
        working-directory: ./frontendJS